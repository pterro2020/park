name: SSSD

on:
  push:
    branches:
      - main

jobs:
  dast-scan:
    runs-on: ubuntu-latest
    steps:
      # Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # Установка Python и зависимостей
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Установка прав на все файлы
      - name: Set permissions recursively
        run: |
          sudo chmod -R 777 $(pwd)
          sudo chown -R 1000:1000 $(pwd)

      # Запуск Django-сервера с uWSGI
      - name: Start Django application with uWSGI
        run: |
          pip install uwsgi
          nohup uwsgi --http :8000 --module parking.wsgi > django.log 2>&1 &
          echo "Waiting for Django application to start..."
          sleep 20
          echo "Django application started on http://localhost:8000"

      # Проверка доступности Django-сервера
      - name: Check if Django server is running
        run: |
          timeout=120
          while [ $timeout -gt 0 ]; do
            curl -sL http://localhost:8000/myparking/ | grep -q ' ' && break
            echo "Waiting for Django server to become available... ($timeout seconds left)"
            sleep 5
            timeout=$((timeout - 5))
          done
          if [ $timeout -le 0 ]; then
            echo "Django server failed to start within the timeout period."
            exit 1
          fi
          echo "Django server is running."

      # Запуск OWASP ZAP Baseline Scan
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --network host --rm -v $(pwd):/zap/wrk/:rw,Z -u 1000:1000 -t ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t http://localhost:8000/myparking/ \
            -r zap_report.json \
            -g zap_config.zap \
            -l IGNORE \
            -i zap-baseline.ignore \
            -x zap.xml || true

      # Проверка отчета
      - name: Validate and Inspect zap_report.json content
        run: |
          if [ ! -f zap_report.json ]; then
            echo "File zap_report.json does not exist."
            exit 1
          fi
          jq empty zap_report.json || (echo "Invalid JSON content in zap_report.json"; exit 1)

      # Преобразование JSON в Markdown
      - name: Convert JSON report to Markdown
        run: |
          echo "# ZAP Scan Results" > zap_report.md
          echo "" >> zap_report.md
          jq -r '.alerts[] | "## Alert: \(.alert)\n\n- Risk: \(.riskdesc)\n- Confidence: \(.confidence)\n- URL: \(.url)\n- Description: \(.otherinfo)\n- Solution: \(.solution)\n\n"' zap_report.json >> zap_report.md
          cat zap_report.md

      # Публикация отчета
      - name: Upload ZAP Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.md

      # Очистка процессов Django
      - name: Cleanup Django processes
        run: |
          pkill -f uwsgi || true
